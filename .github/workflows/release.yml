name: Build and Release

on:
  pull_request:
    types:
      - closed  # Trigger only when the pull request is merged
    branches:
      - feat/release-ci

jobs:
  update-version-and-changelog:
    if: github.event.pull_request.merged == true  # Run only if the PR was merged
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Run Gradle task to update version and changelog
        run: ./gradlew updateVersionAndChangelog -Pversion="${{ github.event.pull_request.title }}" -PchangelogText="${{ github.event.pull_request.body }}"

      - name: Set up Git user
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"

      - name: Commit and push changes
        run: |
          git fetch origin
          git checkout feat/release-ci 
          git pull origin feat/release-ci  
          git add CHANGELOG.md
          git add agentseek/build.gradle.kts
          git commit -m "Updated CHANGELOG.md and build.gradle.kts for new release"
          git push origin feat/release-ci
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  build:
    needs: update-version-and-changelog
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Extract version from build.gradle.kts
        id: get_version
        run: |
          cd agentseek
          VERSION=$(grep "^version" build.gradle.kts | sed -E 's/^version = "(.*)"/\1/')
          echo "version=$VERSION" >> $GITHUB_ENV

      - name: Extract changelog for the version
        id: get_changelog
        run: |
          # Extract the changelog for the specific version
          VERSION="${{ env.version }}"
          sed -n "/^## \\[${VERSION}\\]/,/^## \\[/p" CHANGELOG.md | sed '$d' > CHANGELOG_OUTPUT.md
          echo "changelog<<EOF" >> $GITHUB_ENV
          cat CHANGELOG_OUTPUT.md >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Build fat JAR for agentseek
        run: |
          ./gradlew clean :agentseek:shadowJar # Assumes usage of the Shadow plugin for fat JARs
        env:
          GRADLE_USER_HOME: ${{ runner.temp }}/.gradle # Avoid Gradle daemon issues in GitHub Actions

      - name: Create release and add JAR
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: "v${{ env.version }}"
          name: "${{ env.version }}"
          body: "${{ steps.get_changelog.outputs.changelog }}"
          draft: false
          prerelease: false
          files: agentseek/build/libs/agentseek-${{ env.version }}-all.jar